#include<stdio.h>
const int MAX=1e9;
int const M=7;
void MatrixChain(int *p,int Length,int m[][M],int s[][M])
{
	int q,n=Length-1;
	for(int i=1;i<=n;i++) m[i][i]=0;
	for(int l=2;l<=n;l++) {		//矩阵链的长度
		for(int i=1;i<=n-l+1;i++) {
			int j=i+l-1;         
			m[i][j]=MAX;
			for(int k=i;k<=j-1;k++){
				q=m[i][k]+m[k+1][j]+p[i-1]*p[k]*p[j];
				if(q<m[i][j]){
					m[i][j]=q;
					s[i][j]=k;
				}
			}
		}
	}
}
void Print_s(int s[][M],int i,int j)
{
	if(i == j) 
		printf("A%d",i);
	else
	{
		printf("(");
		Print_s(s,i,s[i][j]);
		Print_s(s,s[i][j]+1,j);
		printf(")");
	}
}
int main()
{
    int p[M]={5,6,2,9,7,6};
    int num;
	printf("输入要计算矩阵链中前几个矩阵："); //前5
	scanf("%d",&num);
	int m[M][M],s[M][M];
	MatrixChain(p,M,m,s);
	printf("------------------\n");
	printf("当n=%d时最优解为： %d\n",num,m[1][num]);
	printf("括号化方案为：\n");
	Print_s(s,1,num);
	return 0;
}

/*
5,6,2,9,7,6
*/

/*
30,35,15,5,10,20
*/
